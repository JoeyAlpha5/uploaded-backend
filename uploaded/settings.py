"""
Django settings for uploaded project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import django_heroku
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-+mbv+ekl*yi-+5_y494zt5@a)k@fif_we&ep7_@=rp6p8@#yr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

SECURE_SSL_REDIRECT = False

# Application definition
CORS_ORIGIN_ALLOW_ALL = True
#allowed origins
##CORS_ORIGIN_WHITELIST = [
##    "http://localhost",
##]

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'POST',
]

##twillio
TWILIO_ACCOUNT_SID = 'AC2a906e294b865be0e04700f85d8b5d81'
TWILIO_AUTH_TOKEN = '7438a625d198e1bf6156487f5e739893'

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'fcm',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'cache-control',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'app',
    'background_task',
    'authentication',
    'cloudinary',
    'django_icons',
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'uploaded.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'uploaded.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# storage bucket
# DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
# GS_BUCKET_NAME = 'uploadedstream'
# os.environ["GOOGLE_APPLICATION_CREDENTIALS"]= os.path.join(BASE_DIR, 'authentication/static/authentication', 'Uploaded-c3b43469d21a.json')


# fcm 
FCM_DJANGO_SETTINGS = {
    "FCM_SERVER_KEY": "AAAA2GRTvUg:APA91bGs6Y9j7X8rODiIKI5robf9c0riqOdtrBVHTUw14F7j36fIAnCvO9nzCWT7iKNK4WwV3lzeouoShRY0cr8wkl8wEuS57coVh3FfGh1kYF7w9RWlc_Xn4oqzpPfpG_3h4xFoY_fd",
        # true if you want to have only one active device per registered user at a time
        # default: False
    "ONE_DEVICE_PER_USER": False,
        # devices to which notifications cannot be sent,
        # are deleted upon receiving error response from FCM
        # default: False
    "DELETE_INACTIVE_DEVICES": True,
}

# django rest framework
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
}

# Activate Django-Heroku.
django_heroku.settings(locals())

#CLOUDINARY
CLOUDINARY = {
  'cloud_name': "www-uploadedstream-com", 
  'api_key': "788787266154753", 
  'api_secret': "8osVdKFSoKDUGrOVi1YPGYx079k" ,
  'cloudinary_url': "http://res.cloudinary.com/www-uploadedstream-com/"
}
